//===-- VC4Subtarget.h - Define Subtarget for the VideoCore-IV --*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the VC4 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_VC4_VC4SUBTARGET_H
#define LLVM_LIB_TARGET_VC4_VC4SUBTARGET_H

#include "VC4FrameLowering.h"
#include "VC4ISelLowering.h"
#include "VC4InstrInfo.h"
#include "VC4SelectionDAGInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"
#include "llvm/Target/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "VC4GenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class VC4Subtarget : public VC4GenSubtargetInfo {
  virtual void anchor();
  VC4InstrInfo InstrInfo;
  VC4FrameLowering FrameLowering;
  VC4TargetLowering TLInfo;
  VC4SelectionDAGInfo TSInfo;

public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  ///
  VC4Subtarget(const Triple &TT, const std::string &CPU,
               const std::string &FS, const TargetMachine &TM);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const VC4InstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const VC4FrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const VC4TargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const VC4SelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
  const TargetRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
};
} // End llvm namespace

#endif
